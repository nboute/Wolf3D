/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   load_textures.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nboute <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2017/09/18 17:40:56 by nboute            #+#    #+#             */
/*   Updated: 2017/10/26 13:00:54 by nboute           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../inc/bitmap.h"
#include <stdlib.h>
#include "../inc/header.h"
#include <stdio.h>

int		**load_wall(int wallid)
{
	if (wallid == 0)
		return (bmp_to_array(TEXTURES"brickwall_dark.bmp", 64, 64));
	else if (wallid == 1)
		return (bmp_to_array(TEXTURES"slide_block.bmp", 64, 64));
	else if (wallid == 2)
		return (bmp_to_array(TEXTURES"warp_maze.bmp", 64, 64));
	else if (wallid == 3)
		return (bmp_to_array(TEXTURES"warp_slide.bmp", 64, 64));
	else if (wallid == 4)
		return (bmp_to_array(TEXTURES"slide_block_2.bmp", 64, 64));
	else if (wallid == 5)
		return (bmp_to_array(TEXTURES"slide_block_3.bmp", 64, 64));
	else if (wallid == 6)
		return (bmp_to_array(TEXTURES"slide_block_4.bmp", 64, 64));
	return (NULL);
}

int		**load_floor(int flrid)
{
	if (flrid == 0)
		return (bmp_to_array(TEXTURES"gravel.bmp", 64, 64));
	else if (flrid == 1)
		return (bmp_to_array(TEXTURES"slide_floor.bmp", 64, 64));
	else if (flrid == 2)
		return (bmp_to_array(TEXTURES"brickfloor.bmp", 64, 64));
	else if (flrid == 3)
		return (bmp_to_array(TEXTURES"red_dall.bmp", 64, 64));
	return (NULL);
}

int		**load_sprite(int texid)
{
	if (texid == 0)
		return (bmp_to_array(TEXTURES"uwut.bmp", 64, 64));
	else if (texid == 1)
		return (bmp_to_array(TEXTURES"barrel.bmp", 64, 64));
	return (NULL);
}

void	load_textures_p2(char **textnames, t_map *map, int *spralphas, int i)
{
	char	*tmp;

	while (++i < map->nbwalls)
	{
		tmp = ft_strjoin(TEXTURES, textnames[i + 2]);
		map->walls[i] = bmp_to_array(tmp, 64, 64);
		ft_strdel(&tmp);
	}
	i = -1;
	while (++i < map->nbfloors)
	{
		tmp = ft_strjoin(TEXTURES, textnames[i + map->nbwalls + 3]);
		map->floors[i] = bmp_to_array(tmp, 64, 64);
		ft_strdel(&tmp);
	}
	i = -1;
	while (++i < map->nbsprites)
	{
		tmp = ft_strjoin(TEXTURES, textnames
				[i + map->nbwalls + map->nbfloors + 4]);
		map->sprtex[i].text = bmp_to_array(tmp, 64, 64);
		spralphas[i] = map->sprtex[i].text[0][0];
		map->sprtex[i].alpha = spralphas[i];
		ft_strdel(&tmp);
	}
}

void	load_textures(char **textnames, t_map *map, int *spralphas)
{
	int	i;

	ft_putendl("loading textures...");
	if (map->nbwalls)
		if (!(map->walls = (int***)malloc(sizeof(int**) * map->nbwalls)))
			ft_exit(0);
	if (map->nbfloors)
		if (!(map->floors = (int***)malloc(sizeof(int**) * map->nbfloors)))
			ft_exit(0);
	if (map->nbsprites)
		if (!(map->sprtex = (t_sprtex*)malloc(sizeof(t_sprtex)
						* map->nbsprites)))
			ft_exit(0);
	load_textures_p2(textnames, map, spralphas, -1);
	i = 0;
	while (textnames[i])
		ft_strdel(&textnames[i++]);
	ft_putendl("textures loaded");
}
